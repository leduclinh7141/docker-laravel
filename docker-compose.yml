version: '3'

networks:
  laravel:
    driver: bridge

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.root.dockerfile
    container_name: nginx
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    platform: linux/x86_64
    image: mysql/mysql-server:5.7
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      # MYSQL_DATABASE: homestead
      # MYSQL_USER: homestead
      # MYSQL_PASSWORD: secret
      # MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'example_db'
      MYSQL_USER: 'example_user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: Asia/Tokyo
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
        #  - /home/user/db/mysql/data:/var/lib/mysql
         - ./mysql-init:/tmp/database
    command: >
          mysqld --init-file="/tmp/database/install_db.sql"
        # mysqld --innodb_use_native_aio=0 |
    networks:
      - laravel
    healthcheck:
        # test: ["CMD", "mysqladmin", "ping", "-p password"]
        test: ["CMD", "mysqladmin", "ping"]
        retries: 3
        timeout: 5s

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    image: composer:2
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: root
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  npm:
    platform: linux/x86_64
    image: node:14.17.5
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
